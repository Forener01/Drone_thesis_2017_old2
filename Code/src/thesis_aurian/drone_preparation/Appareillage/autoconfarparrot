#!/bin/bash

# version 2.2 (06-04-2016)

# changelog:
# version 1.0: Nicolas Rowier
# version 2.0: Arnaud Jacques
#   manage multiple drone connections
# version 2.1: Arnaud Jacques
#   remove connection in network manager to avoid strange errors when the list is full
# version 2.2 : Arnaud Jacques
#   check drones are reachable and add colors
#====================================

# check network manager is runnig
if [[ $(nmcli -t -f RUNNING nm) == *"inactif"* ]] ; then
  echo -e "\\033[1;31m>> ERROR: Network Manager is not running\\033[0;39m"
  echo -e "use this command line: sudo service network-manager start\n"
  #sleep 5
  exit 1
fi

# check nm-applet is off
if [[ $(nmcli nm enable | grep désactivé) == *"désactivé"* ]] ; then
  echo -e "\\033[1;31m>> ERROR: Network Manager is disabled\\033[0;39m"
  echo -e "use this command line: nmcli nm enable true\n"
  #sleep 15
  exit 1
fi

conf_path="./"
conf_int="wlan0"
# current setting
cur_essid=$(iwconfig $conf_int | grep ESSID | cut -d\" -f2)
cur_ip="192.168.1.1"
ardrone_essid=$(sudo iwlist wlan0 scan | grep ESSID | grep ardrone |cut -d\" -f2)
# ap setting
essid="drone"

#check curent essid
if [[ $cur_essid != *"ardrone"* ]] ; then
  echo -e "\\033[1;33m ARDrone not connected, current connection will be lost\n\\033[0;39m"
  #exit 1
fi

for next_essid in $ardrone_essid
do
  echo -e "\\033[1;33mConnection to $next_essid\\033[0;39m"
	nmcli dev wifi connect $next_essid
	sleep 1

	#check connection
	if ping $cur_ip -c1 -q
	then
		#load setting
		if [ ! -e "$conf_path$next_essid" ]
		then
			echo -e "\\033[1;31m>> File $conf_path$next_essid with ip address NOT FOUND\n\\033[0;39m"
		fi
		ip=$(cat "$conf_path$next_essid")
		echo -e "\\033[1;33mnew ip: $ip\\033[0;39m"

		#configure on the ardrone
		telnet $cur_ip << EOF
killall udhcpd;
iwconfig ath0 mode managed essid $essid;
ifconfig ath0 $ip netmask 255.255.255.0 up;
EOF
	fi

	# remove connection to avoid strange errors when the list is full
  # current_drone_all_essid=$(nmcli connection | grep $next_essid | cut -d\  -f1)
  # for one_essid in $current_drone_all_essid
  # do
	#  nmcli connection delete id $one_essid
	#  echo -e "\\033[1;33mConnection $one_essid cleaned\\033[0;39m"
  # done
  nmcli connection delete id $next_essid
	echo -e "\\033[1;33mConnection $next_essid cleaned\\033[0;39m"
done

#


nmcli nm enable false
sudo ifconfig eth0 192.168.1.23
sudo dhclient eth1

sleep 2


if ping 192.168.1.254 -c1 -q
then
  echo -e "\\033[1;32m>> Router reachable\n\\033[0;39m"
  for next_essid in $ardrone_essid
  do
    ip=$(cat "$conf_path$next_essid")
    if ping $ip -c1 -q
  	then
      echo -e "\\033[1;32m>> Drone $next_essid successfully configured with new ip $ip\n\\033[0;39m"
    else
      echo -e "\\033[1;31m>> ERROR: Drone $next_essid unreachable (ip $ip)\n\\033[0;39m"
    fi
  done
else
  echo -e "\\033[1;31m>> ERROR: Router unreachable\n\\033[0;39m"
fi
